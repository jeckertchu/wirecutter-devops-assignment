Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
    Default: "dave-key-pair"
  VpcId:
    Description: Enter the VpcId
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Enter the SubnetId
    Type: AWS::EC2::Subnet::Id
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-1853ac65
    us-west-1:
      AMI: ami-bf5540df
    eu-west-1:
      AMI: ami-3bfab942
    ap-southeast-1:
      AMI: ami-e2adf99e
    ap-southeast-2:
      AMI: ami-43874721    
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata: 
      Comment: Install nginx, logrote, and put static files in
      AWS::CloudFormation::Init:
        config: 
          packages: 
            yum:
              nginx: []
              logrotate: []
          files: 
            /usr/share/nginx/html/hello/index.html:
              content: !Sub |
                <html> Hello World </html>
          services: 
            sysvinit:
              nginx:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: !Ref NameOfService
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash -xe            
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # add user dave, create group wirecutter, and add dave to wirecutter group
            groupadd wirecutter
            useradd -d /home/dave -g wirecutter -m -s /bin/bash dave
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance  --region ${AWS::Region}
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow connections from specified CIDR ranges
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 192.0.2.0/32
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 192.0.2.128/32
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 198.51.100.192/32
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 24.188.180.253/32
Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub 'http://${EC2Instance.PublicDnsName}'